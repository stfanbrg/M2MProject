input {
 file {
  type => "Geolog"
	codec => 
  path => [ "/home/ubuntu/log/*.log" ]
  start_position => beginning
 }
}

output {
  stdout { 
 }
 csv {
    fields => [ [Xa],[Ya],[Za,[RSSIa],[Xb],[Yb],[Zb,[RSSIb],[Xc],[Yc],[Zc,[RSSIc]]
#   fields => [ "Xa","Ya","Za,"RSSIa","Xb","Yb","Zb,"RSSIb","Xc","Yc","Zc,"RSSIc"]
    path => "home/ubuntu/csv/" + [Seq] + ".csv" 
}
# elasticsearch {
# host => "localhost" # Use the internal IP of your Elasticsearch server
# for production
#}

}

filter{
 if [type=="Geolog"] {
  grok {
#  match => { "message" => "[a-zA-Z0-9]+" }
#  match => { "message complet" => "%{[a-zA-Z0-9]+:TXID};%{[a-zA-Z0-9]+:client};%{NUMBER:rssi};%{[a-zA-Z0-9]+:seq};{NUMBER:gpslong};{NUMBER:gpslat};{NUMBER:gpsalt}"}
   match =>{ligne =>"%{BASE16FLOAT}:txId;%{BASE16FLOAT:rxId};%{BASE10NUM:rssi};%{BASE16NUM:index};%{BASE10NUM:gpsLong};%{BASE10NUM:gpsLat};%{BASE10NUM:gpsAlt}"}
    }
	aggregate{	
    task_id => "%{txId}'-'%{index}"
		code => "map['nbsat']=0"
		map_action => create
		
		if [map[nbsat] == 0 ]{
			code => "map['nbsat']=1"
		  map_action => update
			addfield => {"[Seq]" => "%{index}"}
			add_field => { "[Xa]" => "%{gpsLong" }
			add_field => { "[Ya]" => "%{gpsLat" }
			add_field => { "[Za]" => "%{gpsAlt" }
			add_field => { "[RSSIa]" => "%{rssi}" }
		}
		else if [map[nbsat] == 1 ]{
			code => "map['nbsat']=2"
		  map_action => update
			add_field => { "[Xb]" => "%{gpsLong" }
			add_field => { "[Yb]" => "%{gpsLat" }
			add_field => { "[Zb]" => "%{gpsAlt" }
			add_field => { "[RSSIb]" => "%{rssi}" }
		}
		else {
			add_field => { "[Xc]" => "%{gpsLong" }
			add_field => { "[Yc]" => "%{gpsLat" }
			add_field => { "[Zc]" => "%{gpsAlt" }
			add_field => { "[RSSIc]" => "%{rssi}" }
		}
		
	
  }
}
